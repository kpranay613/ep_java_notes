

Algorithm:
----------
Add 2 numbers
Step0:  START
Step1:   Declare N1,N2
Step2:  Declare  Result , Initialize Result =0;
Step3:  READ N1 , N2 Values
Step4:  ADD N1 , N2 Store in Result.
Step5:   Print Result
Step6: END



Add 2 numbers
Step0:  START
Step1:   Declare N1,N2 ,P,Q
Step2:  Declare  Result , Initialize Result =0;
Step3:  READ  P,Q values
Step4:   Assign  P->N1  , Q -> N2   
Step5:  ADD N1 , N2 Store in Result.
Step6:   Print Result
Step7: END



int n1,n2; // 4+4 = 8 bytes

list[] ---> 1 2 3 4 5 6 11 2 3  55 66 




2 4 6 1 3 7 8 5 9 10

Sorting all elements in asc order.

basic/key operation is  swapping numbers
2 4 6 1 3 7 8 5 9 10

2 4 

4 6

6  1 -->  1 6    :  2 4 1 6 3 7 8 5 9 10
4 1 --->  1  4   :  2 1 4 6 3 7 8 5 9 10




In Java:

Algorithm: SUM(A, B) 
Step 1 -  START 
Step 2 -  C ← A + B + 10 
Step 3 -  Stop 


int A , B , C  --> 12 bytes
  10 constant  ---> 4 bytes

 S(P) = C + SP(I)
     =  4 +  12 = 16 bytes





